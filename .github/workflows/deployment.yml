name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [main, develop]

jobs:
  test-ci:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [14.x, 16.x]
        
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run test
  deploy-test:
    needs: test-ci
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-20.04
    concurrency: deploy-to-test
    environment: test
    steps:
      - uses: actions/checkout@v2
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/sharks:test .
      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/sharks:test
  deploy-production:
    needs: test-ci
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    concurrency: deploy-to-production
    environment: production
    steps:
      - uses: actions/checkout@v2
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/sharks:latest .
      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/sharks:latest